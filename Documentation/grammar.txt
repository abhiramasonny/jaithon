Variables --> var keyword  
Syntax: var variable_name Identifier value
This code saves a variable_name in memory with the value of value
Return type: No return type
Example: 
-   var x = 1
-   var y = x
-   var z = y + x

Print Statement --> print keyword
Syntax: print value
This statement prints out the specified values to console.
Return type: Returns a value printed to console
Example:
-   print x
-   print 2
-   print array_1

Math --> math Category
Syntax: math.mathfunction(inputs)
Returns various mathematical functions based off inputs provided by user such as trigfunction, quadFunction, etc...
Return Type: whatever the specific function returns.
Example:
-   var a = math.sin(0.5)
-   var a = math.tan(0.3)
-   var a = math.quad(1,2,1)

Trigonometric Functions --> specific_trigfunction function
Syntax: var variable_name = math.trigfunc(degree)
These functions take an angle (in degrees), and return their corresponding sine, cosine, tangent, asin, acos or atan values.
Return type: Returns to a variable a specific trigfunction applied on a variable or constant.
Example:
-   var value = math.sin(3)
-   var value = math.cos(angle)
-   var value = math.asin(4)

Square root --> sqrt function
Syntax: var variable_name = math.sqrt(value)
This code takes in a value as input, and returns the square root of that function
Return type: Returns to a variable a square root applied on a variable or constant.
Example:
-   var value = math.sqrt(4)
-   var value = math.sqrt(nums)
-   var value = math.sqrt(2)

Arrays init --> array keyword
Syntax: array array_name = [array_size]
This code initializes 5 slots of memory dedicated to the array-type array_name.
Return type: No return type
Example:
-   array a = [4]
-   array a = [size]
-   array a = [6]

Arrays add --> .add dot-expression
Syntax: array_name.add(index, value)
This code adds the specified value to the specified index of the specified array_name.
Return type: Returns a change to a specific array
Example:
-   a.add(0,5)
-   a.add(1,value)
-   a.add(index, value)

Arrays deletion --> .del dot-expression
Syntax: array_name.del(index)
This code nullifies 'deletes' the specified index of the specified array_name.
NOTE: it does not delete the memory slot, only turns the specified index into 0.000000, a null value.
Return type: Returns a change to a specific array
Example:
-   a.del(0)
-   a.add(10)
-   a.add(index)

Arrays sort --> .sort dot-expression
Syntax: array_name.sort()
This function sorts in ascending order all elements in the given array_name using the insertion sort algorithm, and saves the array automatically sorted.
Return type: Returns a change to a specific array
Example:
-   a.sort()
-   b.sort()
-   c.sort()

User Input --> input keyword
Syntax: input variable_name
This code prompts the user to enter a value for the variable_name. The variable_name does not need to be defined previously.
Return type: Returns user input to a specific variable
Example:
-   input x
-   input y
-   input z

Mathematical operators --> +, -, *, /
Syntax: value1 operator value2
This code applies the specified operator to the value1 and value2.
Return type: Returns a Mathematical operation applied to variables/constants
Example:
-   var a = 2+1
-   var b = a-4
-   var c = b/a

Time --> time keyword
Syntax: var variable_name = time()
This code sets the variable_name variable to the time in seconds on the users clock.
Return type: Returns the time
Example:
-   var t = time()
-   print time()
-   var a = time()*1000

Import statement --> import keyword
Syntax: import filename
This code takes the code from filename and uses it as if it was a part of the original code. It is similar to copy pasting the code into the original file at the point where the import statement resides.
Return type: Code from filename
Example:
-   import calculator
-   import file1
-   import test40

Not --> Not keyword
Syntax: term not
This code assumes 1s are true, and 0s are false. It returns the logical inversive of the statement.
Return type: Opposite of statement
Example:
-   var a = c not
-   var a = 1 not
-   var a = 0 not

Comparisons --> >,< keywords
Syntax: term comparison term
This code compares the 2 terms
Return type: Opposite of statement
Example:
-   var a = 2>1
-   var a = b>c
-   var a = c>4

If statement --> if/then/do keyword
Syntax: if condition do statement
This code executes the statement if and only if the condition is not equal to 0.
Return type: No return type
Example:
-   if 1<3 then do print 1
-   if 3>1 then do print 1
-   if lessthan not then do var x = 5

Quadratic Function --> quad function
Syntax: var variable_name = math.quad(a,b,c)
This code takes in 3 value as input, and returns the solved roots for them using the quadratic formula. Under the math Category.
Return type: Returns to a variable the solved quadFunction on variables or constants.
Example:
-   var value = math.quad(1,2,1)
-   var value = math.quad(a,1,2)
-   var value = math.quad(a,b,c)

Pythagorean Theorem --> pyth function
Syntax: var variable_name = math.pyth(a,b)
This code takes in 2 value as input, and returns the solved value for the hypotenuse.
Return type: Returns to a variable the solved value for C.
Example:
-   var value = math.pyth(3,4)
-   var value = math.pyth(a,4)
-   var value = math.pyth(a,b)
